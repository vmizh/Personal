<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                    xmlns:dxlcs="clr-namespace:DevExpress.Xpf.LayoutControl.Serialization;assembly=DevExpress.Xpf.LayoutControl.v23.2"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxci="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:serialization="clr-namespace:DevExpress.Xpf.LayoutControl.Serialization;assembly=DevExpress.Xpf.LayoutControl.v23.2">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="StandartIcon.xaml" />
        <ResourceDictionary Source="Window.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dxmvvm:ObjectToObjectConverter x:Key="SummaryTypeConverter">
        <dxmvvm:MapItem Source="Max" Target="Max" />
        <dxmvvm:MapItem Source="Count" Target="Count" />
        <dxmvvm:MapItem Source="None" Target="None" />
    </dxmvvm:ObjectToObjectConverter>
    <DataTemplate x:Key="SummaryTemplate">
        <ContentControl>
            <dxg:GridSummaryItem FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                SummaryType="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Type, RelativeSource={RelativeSource Self}, Converter={StaticResource SummaryTypeConverter}}" />
        </ContentControl>
    </DataTemplate>
    <Style x:Key="GridControl.Base" TargetType="dxg:GridControl">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="EnableSmartColumnsGeneration" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="AddNew" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="MaxHeight" Value="10000" />
        <Setter Property="MaxWidth" Value="10000" />
        <Setter Property="TotalSummaryGeneratorTemplate" Value="{StaticResource SummaryTemplate}" />
        <Setter Property="dx:DXSerializer.Enabled" Value="True" />
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="All" />
        <Setter Property="dxg:DataControlSerializationOptions.AddNewColumns" Value="True" />
        <Setter Property="dxg:DataControlSerializationOptions.RemoveOldColumns" Value="True" />
        <Setter Property="SelectionMode" Value="Cell" />
    </Style>
    <Style x:Key="TreelistControl.Base" TargetType="dxg:TreeListControl">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="EnableSmartColumnsGeneration" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="RemoveOld" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="MaxHeight" Value="10000" />
        <Setter Property="MaxWidth" Value="10000" />
        <Setter Property="dx:DXSerializer.Enabled" Value="True" />
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="All" />
        <Setter Property="dxg:DataControlSerializationOptions.AddNewColumns" Value="True" />
        <Setter Property="dxg:DataControlSerializationOptions.RemoveOldColumns" Value="True" />
        <Setter Property="UseFieldNameForSerialization" Value="True" />
        <Setter Property="SelectionMode" Value="Cell" />
    </Style>

    <Style TargetType="dxlc:LayoutControl">
        <Setter Property="serialization:RestoreLayoutOptions.AddNewItems" Value="True" />
        <Setter Property="serialization:RestoreLayoutOptions.RemoveOldItems" Value="True" />
    </Style>
    <Style TargetType="dxlc:LayoutGroup">
        <Setter Property="serialization:RestoreLayoutOptions.AddNewItems" Value="True" />
        <Setter Property="serialization:RestoreLayoutOptions.RemoveOldItems" Value="True" />
    </Style>

    <Style x:Key="GridControl.Search" TargetType="dxg:GridControl">
        <Setter Property="ShowBorder" Value="True" />
        <Setter Property="EnableSmartColumnsGeneration" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="AddNew" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="MaxHeight" Value="10000" />
        <Setter Property="MaxWidth" Value="10000" />
        <Setter Property="dx:DXSerializer.Enabled" Value="True" />
        <Setter Property="dx:DXSerializer.SerializationID" Value="gridRows" />
        <Setter Property="dx:DXSerializer.StoreLayoutMode" Value="All" />
        <Setter Property="dxg:DataControlSerializationOptions.AddNewColumns" Value="True" />
        <Setter Property="dxg:DataControlSerializationOptions.RemoveOldColumns" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="ShowLoadingPanel" Value="{Binding IsLoading, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="TableView.Search" TargetType="dxg:TableView">
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="ShowFixedTotalSummary" Value="True" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="EnableImmediatePosting" Value="True" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="ShowGroupPanel" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Открыть документ" Command="{Binding DocumentOpenCommand}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource DocOpenDrawingImage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Создать новый документ">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource AddDrawingImage}" />
                        </MenuItem.Icon>
                        <MenuItem Header="Пустой документ" Command="{Binding DocNewEmptyCommand}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AddEmptyDrawingImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="С текущими реквизитами" Command="{Binding DocNewCopyRequisiteCommand}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AddRequisiteDrawingImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Копия текущего" Command="{Binding DocNewCopyCommand}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AddCopyDrawingImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Экспорт"
                              Command="{Binding VisualControlExportCommand}"
                              CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor,
                                              AncestorType={x:Type ContextMenu}}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource ExportDrawingImage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding DocumentOpenCommand}"
                                               PassEventArgsToCommand="True" MarkRoutedEventsAsHandled="True">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dx:EventArgsToDataRowConverter />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                        <dxmvvm:KeyToCommand Command="{Binding DocumentOpenCommand}"
                                             KeyGesture="Enter"
                                             />
                        <dxmvvm:EventToCommand EventName="AutoGeneratingColumn"
                                               Command="{Binding AutoGeneratingColumnCommand}"
                                               PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TableView.SearchWithAddItems" TargetType="dxg:TableView">
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="ShowFixedTotalSummary" Value="True" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="EnableImmediatePosting" Value="True" />
        <Setter Property="ShowGroupPanel" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Добавить новую запись" Command="{Binding DocNewEmptyCommand}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource AddEmptyDrawingImage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding DocumentOpenCommand}"
                                               PassEventArgsToCommand="True" MarkRoutedEventsAsHandled="True">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dx:EventArgsToDataRowConverter />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                        <dxmvvm:KeyToCommand Command="{Binding DocumentOpenCommand}"
                                             KeyGesture="Enter"
                                             />
                        <dxmvvm:EventToCommand EventName="AutoGeneratingColumn"
                                               Command="{Binding AutoGeneratingColumnCommand}"
                                               PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TableView.SearchWithoutMenu" TargetType="dxg:TableView">
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="ShowFixedTotalSummary" Value="True" />
        <Setter Property="AllowPerPixelScrolling" Value="True" />
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="EnableImmediatePosting" Value="True" />
        <Setter Property="ShowGroupPanel" Value="True" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding DocumentOpenCommand}"
                                               PassEventArgsToCommand="True" MarkRoutedEventsAsHandled="True">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dx:EventArgsToDataRowConverter />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                        <dxmvvm:KeyToCommand Command="{Binding DocumentOpenCommand}"
                                             KeyGesture="Enter"
                                             />
                        <dxmvvm:EventToCommand EventName="AutoGeneratingColumn"
                                               Command="{Binding AutoGeneratingColumnCommand}"
                                               PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeListView.Edit" TargetType="dxg:TreeListView">
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="EnableImmediatePosting" Value="True" />
        <Setter Property="EditFormPostMode" Value="Immediate" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="CellTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Border Name="PART_ValidationBorder" BorderThickness="2" BorderBrush="Black"
                                Visibility="Collapsed" />
                        <dxe:InplaceBaseEdit Name="PART_Editor" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding (dxe:BaseEdit.HasValidationError)}" Value="True">
                            <Setter TargetName="PART_ValidationBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeListView.Standart" TargetType="dxg:TreeListView">
        <Setter Property="ShowTotalSummary" Value="False" />
        <Setter Property="ShowAutoFilterRow" Value="False" />
        <Setter Property="EnableImmediatePosting" Value="False" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="False" />
        <Setter Property="KeyFieldName" Value="Id" />
        <Setter Property="ParentFieldName" Value="ParentId" />
        <Setter Property="AllowSorting" Value="False" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Экспорт"
                              Command="{Binding VisualControlExportCommand}"
                              CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor,
                                              AncestorType={x:Type ContextMenu}}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource ExportDrawingImage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TableView.Standart" TargetType="dxg:TableView">
        <Setter Property="ShowTotalSummary" Value="True" />
        <Setter Property="ShowAutoFilterRow" Value="True" />
        <Setter Property="EnableImmediatePosting" Value="True" />
        <Setter Property="EditFormPostMode" Value="Immediate" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
        <Setter Property="CellTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Border Name="PART_ValidationBorder" BorderThickness="2" BorderBrush="Black"
                                Visibility="Collapsed" />
                        <dxe:InplaceBaseEdit Name="PART_Editor" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding (dxe:BaseEdit.HasValidationError)}" Value="True">
                            <Setter TargetName="PART_ValidationBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:DXSplashScreenService x:Key="WaitIndicatorService">
        <dx:DXSplashScreenService.ViewTemplate>
            <DataTemplate>
                <dx:WaitIndicator Focusable="False" DeferedVisibility="True">
                    <dx:WaitIndicator.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Подождите." FontSize="16" />
                                <TextBlock Text="Загружаю..." FontSize="13" />
                            </StackPanel>
                        </DataTemplate>
                    </dx:WaitIndicator.ContentTemplate>
                </dx:WaitIndicator>
            </DataTemplate>
        </dx:DXSplashScreenService.ViewTemplate>
    </dx:DXSplashScreenService>
    <DataTemplate x:Key="RowsLayoutGroupHeader">
        <StackPanel Orientation="Horizontal">
            <Image Height="16" Width="16" Source="{StaticResource RowsDrawingImage}" />
            <Label Margin="5 0" Content="Строки" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="FactsLayoutGroupHeader">
        <StackPanel Orientation="Horizontal">
            <Image Height="16" Width="16" Source="{StaticResource FactsDrawingImage}" />
            <Label Margin="5 0" Content="Фактурирование" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="PaysLayoutGroupHeader">
        <StackPanel Orientation="Horizontal">
            <Image Height="16" Width="16" Source="{StaticResource PaysDrawingImage}" />
            <Label Margin="5 0" Content="Оплата" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="ButtonSearchStyle" TargetType="dxe:ButtonEdit" x:Shared="False">
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Search"
                                    Command="{Binding SearchCommand}" />
                    <dxe:ButtonInfo Command="{Binding SearchClearCommand}"
                                    GlyphKind="Cancel" />
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand EventName="EditValueChanging"
                                               Command="{Binding SearchCommand}" />
                        <dxmvvm:KeyToCommand EventName="KeyDown" KeyGesture="Enter"
                                             Command="{Binding SearchCommand}" />
                        <dxmvvm:KeyToCommand EventName="KeyDown" KeyGesture="Esc"
                                             Command="{Binding SearchClearCommand}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dxmvvm:ObjectToObjectConverter x:Key="FormatRuleConverter">
        <dxmvvm:MapItem Source="Less" Target="Less" />
        <dxmvvm:MapItem Source="Greater" Target="Greater" />
        <dxmvvm:MapItem Source="Equal" Target="Equal" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ToTypedCommandConverter x:Key="ToTypedCommandConverter" />
    <DataTemplate x:Key="ForegroundRedTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="Red" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>

        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundLightRedTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="PaleVioletRed" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>

        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundDarkRedTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="DarkRed" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>

        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundGreenTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="Green" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundLightGreenTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="LightSeaGreen" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundDarkGreenTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="DarkGreen" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundBlueTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="Blue" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundLightBlueTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="LightBlue" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ForegroundDarkBlueTemplate">
        <ContentControl>
            <dxg:FormatCondition FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                ValueRule="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ValueRule, RelativeSource={RelativeSource Self}, Converter={StaticResource FormatRuleConverter}}"
                Value1="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Value, RelativeSource={RelativeSource Self}}"
                ApplyToRow="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).ApplyToRow, RelativeSource={RelativeSource Self}}">
                <dxg:FormatCondition.Format>
                    <dx:Format Foreground="DarkBlue" />
                </dxg:FormatCondition.Format>
            </dxg:FormatCondition>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="CustomNotificationTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Background="#FF3D3D3D" CornerRadius="10,0,0,10">
                <Image Stretch="Fill" Width="100" Height="100" Source="/Images/Box_Green.png" />
            </Border>
            <Border Grid.Column="1" CornerRadius="0,10,10,0" Background="{Binding Background}">
                <TextBox Text="{Binding NotifyInfo,Mode=OneWay}"
                         TextWrapping="WrapWithOverflow"
                         IsReadOnly="True" />
            </Border>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
