services:
  personal.libraryapi:
    hostname: Personal
    container_name: PersonalLibrary
    image: personal.library
    build:
      context: .
      dockerfile: Personal.LibraryAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      - ASPNETCORE_HTTPS_PORTS=5001
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    ports:
      - "5000:5000"
      - "5001:5001"
    restart: unless-stopped
    depends_on:
      - personal.database
      - personal.cache
    
  personal.motorsport:
    hostname: Personal
    container_name: PersonalMotorSport
    image: personal.motorsport
    build:
      context: .
      dockerfile: Personal.MotorSportAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5100
      - ASPNETCORE_HTTPS_PORTS=5101
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    ports:
      - "5100:5100"
      - "5101:5101"
    restart: unless-stopped
    depends_on:
      - personal.database
      - personal.cache
  
  personal.database:
    image: mongo:latest
    container_name: MongoPersonalDB
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=CbvrfFhntvrf65
      - MONGO_INITDB_DATABASE=test
    ports:
      - '27017:27017'
    volumes:
      - "c:\\DB_Data\\Personal\\:/data/db"
    restart: always

  personal.cache:
    image: redis:latest
    container_name: RedisCache
    restart: always
    ports:
      - '6379:6379' 

